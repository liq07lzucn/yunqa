#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
from enaml.widgets.api import Container, Html
from enaml.workbench.api import Extension, PluginManifest
from enaml.workbench.ui.api import ActionItem, MenuItem, ItemGroup


import os

from enaml.icon import Icon,IconImage
from enaml.image import Image
from enaml.layout.api import vbox, hbox, spacer
from enaml.widgets.api import Window, Container, ComboBox, ImageView,PushButton, \
                              Notebook, Page

from workflow.api import load_icon2,ICONIMAGE_PATH



def image_path(name):
    global ICONIMAGE_PATH
    
    dirname = ICONIMAGE_PATH
    
    print "In the image_viewer,ICONIMAGE_PATH:", ICONIMAGE_PATH
    return os.path.join(dirname, 'images', name)


IMAGES = {
    'Image A': Image(data=open(image_path('img1.png'), 'rb').read()),
    'Image B': Image(data=open(image_path('img2.png'), 'rb').read()),
    'Image C': Image(data=open(image_path('img3.png'), 'rb').read()),
}



#iconimage_path = os.path.join(os.path.dirname(__file__), 'images')



WELCOM_ICON =  load_icon2('welcome.png','welcomes.png')

DICOMRT_ICON = load_icon2('dicomrt.png','dicomrts.png')

TRAJECTORY_ICON = load_icon2('trajectory.png','trajectorys.png')

CLOUDMCSIM_ICON = load_icon2('cloudmcsim.png','cloudmcsims.png')


enamldef ImagesViewer(Container):
        constraints = [
            vbox(hbox(pt1,pt2,pt3,pt4,spacer),
                 hbox(cbox, spacer), 
                 img),
        ]
       
        PushButton: pt1:
          #  text = 'Push Me'
            icon = WELCOM_ICON
            icon_size = (48,48)
            clicked :: print 'I was clicked!'

        PushButton: pt2:
            #text = 'Toggle Me'
            icon = DICOMRT_ICON
            icon_size = (48,48)
            checkable = True
            toggled :: print 'I was toggled'
         
        PushButton: pt3:
           # text = 'Push Me'
            icon = TRAJECTORY_ICON
            icon_size = (48,48)
            clicked :: print 'I was clicked!'

        PushButton: pt4:
           # text = 'Push Me'
            icon = CLOUDMCSIM_ICON
            icon_size = (48,48)
            clicked :: print 'I was clicked!'

        ComboBox: cbox:
            items = sorted(IMAGES.keys())
            index = 0
        ImageView: img:
            image << IMAGES[cbox.selected_item]
        ImageView: img1:
            image << IMAGES[cbox.selected_item]
 
enamldef Main(Window):
    Container:
        ImagesViewer:
            pass
