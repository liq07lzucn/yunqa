#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#------------------------------------------------------------------------------
from enaml.widgets.api import Container, Html
from enaml.workbench.api import Extension, PluginManifest
from enaml.workbench.ui.api import ActionItem, MenuItem, ItemGroup



from cloud_qa.ext_widgets.qt_list_str_widget import QtListStrWidget
from enaml.core.api import Conditional


from enaml.layout.api import vbox, hbox, spacer,grid
from enaml.widgets.api import Window, Container, ComboBox, ImageView,PushButton, \
                              Notebook, Page,Splitter, SplitItem, ScrollArea
             
                  
#                              
#import enaml
#with enaml.imports():
#        from images_viewer import ImagesViewer
#        from patient_list_page import PatientListPage
#        from data_import_page import DataImportPage
#        
# 

from enaml.widgets.api import Window, Container, VTKCanvas

import vtk


def create_renderer():
    quadric = vtk.vtkQuadric()
    quadric.SetCoefficients(.5, 1, .2, 0, .1, 0, 0, .2, 0, 0)

    sample = vtk.vtkSampleFunction()
    sample.SetSampleDimensions(50, 50, 50)
    sample.SetImplicitFunction(quadric)

    contours = vtk.vtkContourFilter()
    contours.SetInputConnection(sample.GetOutputPort())
    contours.GenerateValues(5, 0.0, 1.2)

    contour_mapper = vtk.vtkPolyDataMapper()
    contour_mapper.SetInputConnection(contours.GetOutputPort())
    contour_mapper.SetScalarRange(0.0, 1.2)

    contour_actor = vtk.vtkActor()
    contour_actor.SetMapper(contour_mapper)

    outline = vtk.vtkOutlineFilter()
    outline.SetInputConnection(sample.GetOutputPort())

    outline_mapper = vtk.vtkPolyDataMapper()
    outline_mapper.SetInputConnection(outline.GetOutputPort())

    outline_actor = vtk.vtkActor()
    outline_actor.SetMapper(outline_mapper)
    outline_actor.GetProperty().SetColor(0, 0, 0)

    renderer = vtk.vtkRenderer()
    renderer.AddActor(contour_actor)
    renderer.AddActor(outline_actor)
    renderer.SetBackground(.75, .75, .75)

    return renderer

    


enamldef  UPLNoteBookItem(Container): 
        padding =0   
        Notebook:
            tabs_closable = False
            tabs_movable = False

            Page:
                title = 'Overview'
                QtListStrWidget:
                    pass

            Page:
                title = 'Structures'
                QtListStrWidget:
                    pass
            Page:
                title = 'IsoDoses'
                QtListStrWidget:
                    pass
           

enamldef  UPR2DItems(Container): 
       padding =0
       constraints = [
            grid(
                [transvers,  DVH],
                [coronal,  sagital],            
                column_align='width',
                row_align='v_center',
               
            ),
            transvers.width == DVH.width,
            transvers.height <= 250,
            coronal.height <= 250
        ]

       VTKCanvas: transvers:
         #   renderer = create_renderer()
         pass  
       VTKCanvas: DVH:
         pass
         #   renderer = create_renderer()
       VTKCanvas: coronal:
          pass #  renderer = create_renderer()
       VTKCanvas: sagital:
          pass
      
          #    renderer = create_renderer()
        
   
    
enamldef  UpSplitItem(Container):          
        padding = 0     
 
        Splitter:
            orientation = 'horizontal'
            SplitItem: upleftitem:
                stretch  = 10
                UPLNoteBookItem: 
                    pass
                                
            SplitItem: uprightitem:
                stretch = 6
                UPR2DItems: 
                    pass
        
enamldef  BottomSplitItem(Container): 
        padding =0    
        Notebook:
            tabs_closable = False
            tabs_movable = False

            Page:
                title = 'Fields'
                VTKCanvas: fields:
                    renderer = create_renderer()
                 
            Page:
                title = 'Dose Statistics'
                VTKCanvas: fields:
                    renderer = create_renderer()
    
    
    

enamldef  DICOMRTView(Container): 
         

        Splitter:
            orientation = 'vertical'
            SplitItem: 
                stretch =2
                UpSplitItem:  
                    pass          
       
            SplitItem: 
                stretch = 120
                BottomSplitItem: 
                 
                    pass
                     

enamldef Main(Window):
    Container:
        DICOMRTView:
            pass

